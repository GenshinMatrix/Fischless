<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Fischless.Design.Controls"
                    xmlns:primitives="clr-namespace:ModernWpf.Controls.Primitives;assembly=ModernWpf"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ui="http://schemas.modernwpf.com/2019">

    <sys:Double x:Key="NavigationViewItemOnLeftMinHeight">35</sys:Double>
    <CornerRadius x:Key="NavigationViewItemRevealBorderCornerRadius">4,4,4,4</CornerRadius>

    <Style x:Key="MUX_NavigationViewItemPresenterStyleWhenOnLeftPane" TargetType="ui:NavigationViewItemPresenter">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource NavigationViewItemBorderThickness}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ui:NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          MinHeight="{DynamicResource NavigationViewItemOnLeftMinHeight}"
                          Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <Storyboard x:Key="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="0.0"
                                                 To="180.0"
                                                 Duration="0:0:0.1" />
                            </Storyboard>
                            <Storyboard x:Key="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="180.0"
                                                 To="0.0"
                                                 Duration="0:0:0.1" />
                            </Storyboard>
                        </Grid.Resources>

                        <Border x:Name="RevealBorder"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource NavigationViewItemRevealBorderCornerRadius}" />
                        <Grid x:Name="PresenterContentRootGrid">
                            <!--  Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation.  -->
                            <Grid Margin="1,0,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center">

                                <Rectangle x:Name="SelectionIndicator"
                                           Width="3"
                                           Height="20"
                                           Fill="{DynamicResource IndicatorForeground}"
                                           Opacity="0"
                                           RadiusX="2"
                                           RadiusY="2" />
                            </Grid>

                            <Grid x:Name="ContentGrid"
                                  MinHeight="{DynamicResource NavigationViewItemOnLeftMinHeight}"
                                  HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="IconColumn" ui:ColumnDefinitionHelper.PixelWidth="{DynamicResource NavigationViewCompactPaneLength}" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Viewbox x:Name="IconBox"
                                         Height="16"
                                         Margin="{DynamicResource NavigationViewItemOnLeftIconBoxMargin}">
                                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" />
                                </Viewbox>

                                <!--  Padding="{TemplateBinding Padding}"  -->
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{DynamicResource NavigationViewItemContentPresenterMargin}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />

                                <Grid x:Name="ExpandCollapseChevron"
                                      Grid.Column="2"
                                      Width="40"
                                      Margin="{DynamicResource NavigationViewItemExpandChevronMargin}"
                                      HorizontalAlignment="Right"
                                      Background="Transparent"
                                      Visibility="Collapsed">
                                    <ui:FontIconFallback HorizontalAlignment="Center"
                                                         VerticalAlignment="Center"
                                                         Data="{DynamicResource NavigationViewItemExpandedPath}"
                                                         FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                                         FontSize="{DynamicResource NavigationViewItemExpandedGlyphFontSize}"
                                                         Foreground="{DynamicResource NavigationViewItemForeground}"
                                                         RenderTransformOrigin="0.5, 0.5">
                                        <ui:FontIconFallback.RenderTransform>
                                            <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                        </ui:FontIconFallback.RenderTransform>
                                    </ui:FontIconFallback>
                                </Grid>
                            </Grid>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PointerStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="PointerOverSelected" />
                                <VisualState x:Name="PressedSelected" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisabledStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="DisabledStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="IconVisible" />
                                <VisualState x:Name="IconCollapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IconBox" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IconColumn" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>16</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneAndTopLevelItemStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PaneAndTopLevelItemStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="NotClosedCompactAndTopLevelItem" />
                                <VisualState x:Name="ClosedCompactAndTopLevelItem" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="RevealBorder" Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="RevealBorder" Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="Selected">
                            <Setter TargetName="RevealBorder" Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PointerOverSelected">
                            <Setter TargetName="RevealBorder" Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushSelectedPointerOver}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPointerOver}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PressedSelected">
                            <Setter TargetName="RevealBorder" Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushSelectedPressed}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPressed}" />
                        </Trigger>

                        <Trigger SourceName="DisabledStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="RevealBorder" Property="BorderBrush" Value="{DynamicResource ButtonBackgroundDisabled}" />
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
                        </Trigger>

                        <Trigger SourceName="PaneAndTopLevelItemStatesListener" Property="CurrentStateName" Value="ClosedCompactAndTopLevelItem">
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="{DynamicResource NavigationViewCompactItemContentPresenterMargin}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DefaultNavigationViewItemControlTemplate" TargetType="ui:NavigationViewItem">
        <Grid x:Name="NVIRootGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>


            <ui:NavigationViewItemPresenter x:Name="NavigationViewItemPresenter"
                                            Margin="{TemplateBinding Margin}"
                                            Padding="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                            CornerRadius="{TemplateBinding CornerRadius}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Icon="{TemplateBinding Icon}"
                                            IsTabStop="False"
                                            UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" />
            <ui:ItemsRepeater x:Name="NavigationViewItemMenuItemsHost"
                              Grid.Row="1"
                              Visibility="Collapsed">
                <ui:ItemsRepeater.Layout>
                    <ui:StackLayout Orientation="Vertical" />
                </ui:ItemsRepeater.Layout>
            </ui:ItemsRepeater>
            <ui:FlyoutBase.AttachedFlyout>
                <ui:Flyout x:Name="ChildrenFlyout" Placement="RightEdgeAlignedTop">
                    <ui:Flyout.FlyoutPresenterStyle>
                        <Style TargetType="ui:FlyoutPresenter">
                            <Setter Property="Padding" Value="{DynamicResource TopNavigationViewOverflowMenuPadding}" />
                            <!--  Set negative top margin to make the flyout align exactly with the button  -->
                            <!--<Setter Property="Margin" Value="0,-4,0,0" />-->
                        </Style>
                    </ui:Flyout.FlyoutPresenterStyle>
                    <Grid x:Name="FlyoutRootGrid">
                        <Grid x:Name="FlyoutContentGrid" />
                    </Grid>
                </ui:Flyout>
            </ui:FlyoutBase.AttachedFlyout>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                    <ui:VisualStateGroupListener.Listener>
                        <ui:VisualStateGroupListener x:Name="ItemOnNavigationViewListPositionStatesListener" />
                    </ui:VisualStateGroupListener.Listener>
                    <VisualState x:Name="OnLeftNavigation" />
                    <!--
                            <VisualState x:Name="OnLeftNavigationReveal" />
                    -->
                    <VisualState x:Name="OnTopNavigationPrimary">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChildrenFlyout" Storyboard.TargetProperty="Placement">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static ui:FlyoutPlacementMode.BottomEdgeAlignedLeft}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <!--
                            <VisualState x:Name="OnTopNavigationPrimaryReveal">
                            <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChildrenFlyout" Storyboard.TargetProperty="Placement">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static primitives:FlyoutPlacementMode.BottomEdgeAlignedLeft}" />
                            </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            </VisualState>
                    -->
                    <VisualState x:Name="OnTopNavigationOverflow" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <ControlTemplate.Triggers>
            <!--  OnLeftNavigation  -->
            <Trigger SourceName="ItemOnNavigationViewListPositionStatesListener" Property="CurrentStateName" Value="OnLeftNavigation">
                <Setter TargetName="NavigationViewItemPresenter" Property="Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPane}" />
            </Trigger>
            <!--  OnLeftNavigationReveal  -->
            <!--
                    <Trigger Property="CurrentStateName" Value="OnLeftNavigationReveal" SourceName="ItemOnNavigationViewListPositionStatesListener">
                    <Setter TargetName="NavigationViewItemPresenter" Property="Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPaneWithRevealFocus}" />
                    </Trigger>
            -->
            <!--  OnTopNavigationPrimary  -->
            <Trigger SourceName="ItemOnNavigationViewListPositionStatesListener" Property="CurrentStateName" Value="OnTopNavigationPrimary">
                <Setter TargetName="NavigationViewItemPresenter" Property="Margin" Value="{DynamicResource TopNavigationViewItemMargin}" />
                <Setter TargetName="NavigationViewItemPresenter" Property="Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPane}" />
            </Trigger>
            <!--  OnTopNavigationPrimaryReveal  -->
            <!--
                    <Trigger Property="CurrentStateName" Value="OnTopNavigationPrimaryReveal" SourceName="ItemOnNavigationViewListPositionStatesListener">
                    <Setter TargetName="NavigationViewItemPresenter" Property="Margin" Value="{DynamicResource TopNavigationViewItemMargin}" />
                    <Setter TargetName="NavigationViewItemPresenter" Property="Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneWithRevealFocus}" />
                    </Trigger>
            -->
            <!--  OnTopNavigationOverflow  -->
            <Trigger SourceName="ItemOnNavigationViewListPositionStatesListener" Property="CurrentStateName" Value="OnTopNavigationOverflow">
                <Setter TargetName="NavigationViewItemPresenter" Property="Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="DefaultNavigationViewItemStyle" TargetType="ui:NavigationViewItem">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Margin" Value="{DynamicResource NavigationViewItemMargin}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="Template" Value="{StaticResource DefaultNavigationViewItemControlTemplate}" />
    </Style>

    <Style BasedOn="{StaticResource DefaultNavigationViewItemStyle}" TargetType="ui:NavigationViewItem" />

</ResourceDictionary>
